version: '3.6'
name: piekerp
networks:
  infra:
    name: infra
    driver: bridge
    external: true
volumes:
  restored_repository:
    driver: local
  cache:
  db_data:
services:
  postgres:
    container_name: postgres
    image: postgres:12
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
      - restored_repository:/tmp/restored_repository
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks: [infra]

  hasura:
    container_name: hasura
    image: hasura/graphql-engine:v2.47.0-beta.1
    ports:
      - '13396:8080'
    depends_on:
      - 'postgres'
    restart: unless-stopped
    networks: [infra]
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true' # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: test
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256", "key": "${JWT_ACCESS_SECRET}"}'
      HASURA_GRAPHQL_LOG_LEVEL: warn
